{"version":3,"file":"static/js/113.00792f4e.chunk.js","mappings":"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","sources":["component/admin/service/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport {\r\n  getAllServiceRequests,\r\n  updateServiceRequest,\r\n} from \"../../../store/admin-action\";\r\n\r\nexport default function ServiceRequest() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { serviceRequestData, serviceRequestLoader } = useSelector(\r\n    (state) => state.admin\r\n  );\r\n\r\n  const timeChange = () => {\r\n    return serviceRequestData.map((d) => ({\r\n      ...d,\r\n      timeFromNow: moment(d.time).fromNow(),\r\n    }));\r\n  };\r\n\r\n  const refreshData = () => {\r\n    setTimeout(() => {\r\n      dispatch(getAllServiceRequests());\r\n      timeChange();\r\n    }, 600);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Tooltip title={params.row?.name}>\r\n          <Typography variant=\"body2\">{params.row?.name}</Typography>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      field: \"mobile\",\r\n      headerName: \"Mobile No.\",\r\n      type: \"string\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      type: \"string\",\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Tooltip title={params.row?.email}>\r\n          <Typography variant=\"body2\">{params.row?.email}</Typography>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      field: \"address\",\r\n      headerName: \"Address\",\r\n      type: \"string\",\r\n      width: 350,\r\n      renderCell: (params) => (\r\n        <Tooltip title={params.row?.address}>\r\n          <Typography variant=\"body2\">{params.row?.address}</Typography>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      field: \"productName\",\r\n      headerName: \"Product Name\",\r\n      type: \"string\",\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Tooltip title={params.row?.productName}>\r\n          <Typography variant=\"body2\">{params.row?.productName}</Typography>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      field: \"issue\",\r\n      headerName: \"Issue\",\r\n      type: \"string\",\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Tooltip title={params.row?.issue}>\r\n          <Typography variant=\"body2\">{params.row?.issue}</Typography>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      field: \"timeFromNow\",\r\n      headerName: \"Time\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"adminFeedback\",\r\n      headerName: \"Admin Feedback\",\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Tooltip title={params.row?.adminFeedback}>\r\n          <Typography variant=\"body2\">{params.row?.adminFeedback}</Typography>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const onSubmitHandler = (e) => {\r\n          e.preventDefault();\r\n          const value = e.target[0]?.value;\r\n          if (value.length > 0) {\r\n            const data = params.row;\r\n            data.adminFeedback = e.target[0].value;\r\n            dispatch(updateServiceRequest(data));\r\n            e.target[0].value = \"\";\r\n            refreshData();\r\n          }\r\n        };\r\n        return (\r\n          <Box\r\n            component={\"form\"}\r\n            onSubmit={onSubmitHandler}\r\n            display=\"flex\"\r\n            justifyContent={\"space-between\"}\r\n            alignItems={\"center\"}\r\n            gap=\"5px\"\r\n          >\r\n            <TextField\r\n              name=\"adminFeedback\"\r\n              label=\"Admin Feedback\"\r\n              placeholder=\"Enter your feedback\"\r\n              size=\"small\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllServiceRequests());\r\n    timeChange();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Paper\r\n        className=\"admin-header\"\r\n        style={{\r\n          padding: \"5px\",\r\n          margin: \"8px auto\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          Service Request\r\n        </Typography>\r\n      </Paper>\r\n      <div style={{ height: 400, width: \"100%\", margin: \"5px auto\" }}>\r\n        <DataGrid\r\n          loading={serviceRequestLoader}\r\n          getRowId={(r) => r._id}\r\n          rows={timeChange()}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ServiceRequest","dispatch","useDispatch","useSelector","state","admin","serviceRequestData","serviceRequestLoader","timeChange","map","d","timeFromNow","moment","time","fromNow","columns","field","headerName","width","renderCell","params","Tooltip","title","row","name","Typography","variant","type","email","address","productName","issue","adminFeedback","Box","component","onSubmit","e","preventDefault","target","value","length","data","updateServiceRequest","setTimeout","getAllServiceRequests","display","justifyContent","alignItems","gap","TextField","label","placeholder","size","Button","useEffect","Paper","className","style","padding","margin","color","height","loading","getRowId","r","_id","rows","pageSize","rowsPerPageOptions"],"sourceRoot":""}