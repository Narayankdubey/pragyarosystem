{"version":3,"file":"static/js/529.d8e9cc04.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../javascript/esm|C:/Users/naray/Desktop/dec/projects/pragyarosystem/client/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../javascript/esm|C:/Users/naray/Desktop/dec/projects/pragyarosystem/client/node_modules/@babel/runtime/helpers/esm/get.js","../javascript/esm|C:/Users/naray/Desktop/dec/projects/pragyarosystem/client/node_modules/@babel/runtime/helpers/esm/construct.js","../javascript/esm|C:/Users/naray/Desktop/dec/projects/pragyarosystem/client/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../javascript/esm|C:/Users/naray/Desktop/dec/projects/pragyarosystem/client/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../javascript/esm|C:/Users/naray/Desktop/dec/projects/pragyarosystem/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","styled","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","React","inProps","ref","useThemeProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","_jsx","component","variant","color","_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","_construct","Parent","args","Class","isNativeReflectConstruct","construct","a","push","instance","Function","bind","setPrototypeOf","_wrapNativeSuper","_cache","Map","undefined","fn","toString","indexOf","TypeError","has","set","Wrapper","constructor","create","enumerable","writable","configurable","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","unsupportedIterableToArray","F","s","n","done","_e","f","normalCompletion","didErr","step","next","_e2","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}