{"version":3,"file":"static/js/734.7b3d48cc.chunk.js","mappings":"0PAQMA,EAAU,CAEd,CAAEC,MAAO,OAAQC,WAAY,OAAQC,MAAO,KAE5C,CACEF,MAAO,SACPC,WAAY,aACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,QACPC,WAAY,QACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,UACPC,WAAY,UACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,eACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,QACPC,WAAY,QACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,cACPC,WAAY,OACZC,MAAO,MAeI,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAoDC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAzEC,EAAR,EAAQA,mBAAmBC,EAA3B,EAA2BA,sBAE3BC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,OACTC,MAGC,IAEH,IAAMA,EAAa,WACjB,OAAOJ,EAAmBK,KAAI,SAACC,GAAD,eAAC,UAC1BA,GADyB,IAE5BC,YAAaC,GAAAA,CAAOF,EAAEG,MAAMC,gBAGhC,OACE,4BACE,SAAC,IAAD,CACEC,UAAU,eAEVC,MAAO,CACLC,QAAS,MACTC,OAAQ,WACRtB,MAAO,OACPuB,QAAS,OACTC,eAAgB,gBAChBC,MAAO,SATX,UAcE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,gCAIF,gBAAKP,MAAO,CAAEQ,OAAQ,IAAK5B,MAAO,OAAQsB,OAAQ,YAAlD,UACE,SAAC,MAAD,CACEO,QAASpB,EACTqB,SAAU,SAACC,GAAD,OAAOA,EAAEC,KACnBC,KAAMrB,IACNf,QAASA,EACTqC,SAAU,EACVC,mBAAoB,CAAC","sources":["component/admin/service/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Paper, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { getAllServiceRequests } from \"../../../store/admin-action\";\r\n\r\nconst columns = [\r\n  //   { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"name\", headerName: \"Name\", width: 250 },\r\n  //   { field: \"lastName\", headerName: \"Last name\", width: 130 },\r\n  {\r\n    field: \"mobile\",\r\n    headerName: \"Mobile No.\",\r\n    type: \"string\",\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"email\",\r\n    headerName: \"Email\",\r\n    type: \"string\",\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"address\",\r\n    headerName: \"Address\",\r\n    type: \"string\",\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"productName\",\r\n    headerName: \"Product Name\",\r\n    type: \"string\",\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"issue\",\r\n    headerName: \"Issue\",\r\n    type: \"string\",\r\n    width: 150,\r\n  },\r\n  {\r\n    field: \"timeFromNow\",\r\n    headerName: \"Time\",\r\n    width: 150,\r\n  },\r\n  //   {\r\n  //     field: \"fullName\",\r\n  //     headerName: \"Full name\",\r\n  //     description: \"This column has a value getter and is not sortable.\",\r\n  //     sortable: false,\r\n  //     width: 160,\r\n  //     valueGetter: (params) =>\r\n  //       `${params.getValue(params.id, \"firstName\") || \"\"} ${\r\n  //         params.getValue(params.id, \"lastName\") || \"\"\r\n  //       }`,\r\n  //   },\r\n];\r\n\r\nexport default function ServiceRequest() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { serviceRequestData,serviceRequestLoader } = useSelector((state) => state.admin);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllServiceRequests());\r\n    timeChange();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const timeChange = () => {\r\n    return serviceRequestData.map((d) => ({\r\n      ...d,\r\n      timeFromNow: moment(d.time).fromNow(),\r\n    }));\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper\r\n        className=\"admin-header\"\r\n        // elevation={3}\r\n        style={{\r\n          padding: \"5px\",\r\n          margin: \"8px auto\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          color: \"black\",\r\n          //   borderBottom: \"1px solid black\",\r\n          //   borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          Service Request\r\n        </Typography>\r\n      </Paper>\r\n      <div style={{ height: 400, width: \"100%\", margin: \"5px auto\" }}>\r\n        <DataGrid\r\n          loading={serviceRequestLoader}\r\n          getRowId={(r) => r._id}\r\n          rows={timeChange()}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n          // checkboxSelection\r\n          // initialState={{\r\n          //   sorting: {\r\n          //     sortModel: [{ field: \"timeFromNow\", sort: \"desc\" }],\r\n          //   },\r\n          // }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["columns","field","headerName","width","type","ServiceRequest","dispatch","useDispatch","useSelector","state","admin","serviceRequestData","serviceRequestLoader","useEffect","getAllServiceRequests","timeChange","map","d","timeFromNow","moment","time","fromNow","className","style","padding","margin","display","justifyContent","color","variant","component","height","loading","getRowId","r","_id","rows","pageSize","rowsPerPageOptions"],"sourceRoot":""}