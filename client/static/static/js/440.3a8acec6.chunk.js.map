{"version":3,"file":"static/js/440.3a8acec6.chunk.js","mappings":"gSAoBA,EAhBe,WACb,OACE,SAACA,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,MAAO,OACPC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QANZ,UASE,SAACC,EAAA,EAAD,O,UC8EN,EA5Ee,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC1BC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAAkCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,WAAvDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cAEVC,GAAWC,EAAAA,EAAAA,UAEXC,GAAqBC,EAAAA,EAAAA,cAAY,SAACC,GAClCJ,EAASK,SAASL,EAASK,QAAQC,aACvCN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAQ,GAAGC,gBACA,IAAThB,IACFH,GAASoB,EAAAA,EAAAA,IAAUrB,IACnBK,EAAQ,OAIVU,GAAMJ,EAASK,QAAQM,QAAQP,KAClC,CAACd,EAAUD,EAAII,IAQlB,OANAmB,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLtB,GAASuB,EAAAA,EAAAA,UAEV,CAACvB,EAAUD,KAGZ,UAACyB,EAAA,EAAD,CAAOC,MAAO,CAAEhC,MAAO,QAAUiC,IAAKd,EAAtC,WACE,UAACtB,EAAA,EAAD,CACEE,QAAS,OACTE,eAAe,gBACfC,WAAY,SACZ8B,MAAO,CAAEE,aAAc,kBAJzB,WAME,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,SAACC,EAAA,EAAD,CAAQD,QAAQ,WAAWE,QAASjC,EAApC,2BAKDW,GACC,SAAC,EAAD,IACED,GAAUA,EAAOwB,OAAS,EAC5BxB,EAAOyB,KAAI,SAACC,EAAMC,GAAP,OACT,UAAC7C,EAAA,EAAD,YACE,UAACA,EAAA,EAAD,CACEE,QAAS,OACTG,WAAY,SACZD,eAAgB,gBAHlB,WAKE,UAACJ,EAAA,EAAD,CAAKE,QAAS,OAAQG,WAAY,SAAUyC,IAAK,MAAjD,WACE,SAACC,EAAA,EAAD,WAAa,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMI,QAAN,OAAcJ,QAAd,IAAcA,OAAd,EAAcA,EAAMI,KAAKC,GAAG,OACrC,SAACX,EAAA,EAAD,CAAYC,QAAQ,QAApB,gBAA6BK,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMI,WAErC,SAACV,EAAA,EAAD,CAAYC,QAAQ,YAApB,SACGW,GAAAA,CAAM,OAACN,QAAD,IAACA,OAAD,EAACA,EAAMO,MAAMC,gBAGxB,SAACpD,EAAA,EAAD,CAAKG,MAAO,OAAZ,UACE,SAACkD,EAAA,EAAD,CAAQL,KAAK,YAAYM,MAAK,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMW,OAAQC,UAAQ,OAGxD,SAAClB,EAAA,EAAD,CAAYC,QAAQ,QAAQkB,cAAY,EAAxC,gBACGb,QADH,IACGA,OADH,EACGA,EAAM1B,SACK,IACb2B,EAAQ3B,EAAOwB,OAAS,IAAK,SAACgB,EAAA,EAAD,MArBtBb,OAyBZ,SAACP,EAAA,EAAD,CAAYqB,UAAW,SAAvB","sources":["component/UI/loader/index.js","component/products/productDetails/component/review.js"],"sourcesContent":["import React from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useRef, useCallback, useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Rating,\r\n  Divider,\r\n  Button,\r\n  Avatar,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport Loader from \"../../../UI/loader\";\r\n\r\nimport { getReview, clearReview } from \"../../../../store/product-action\";\r\n\r\nconst Review = ({ setReviewModal, id }) => {\r\n  const dispatch = useDispatch();\r\n  const [load, setLoad] = useState(0);\r\n\r\n  const { review, reviewLoading } = useSelector((state) => state.product);\r\n\r\n  const observer = useRef();\r\n\r\n  const lastBookElementRef = useCallback((node) => {\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        if (load === 0) {\r\n          dispatch(getReview(id));\r\n          setLoad(1);\r\n        }\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [dispatch, id, load]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearReview());\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Paper style={{ width: \"100%\" }} ref={lastBookElementRef}>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent=\"space-between\"\r\n        alignItems={\"center\"}\r\n        style={{ borderBottom: \"1px solid grey\" }}\r\n      >\r\n        <Typography variant=\"h5\">Top Reviews</Typography>\r\n        <Button variant=\"outlined\" onClick={setReviewModal}>\r\n          Add Review\r\n        </Button>\r\n      </Box>\r\n\r\n      {reviewLoading ? (\r\n        <Loader />\r\n      ) : review && review.length > 0 ? (\r\n        review.map((item, index) => (\r\n          <Box key={index}>\r\n            <Box\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"space-between\"}\r\n            >\r\n              <Box display={\"flex\"} alignItems={\"center\"} gap={\"8px\"}>\r\n                <Avatar>{item?.name && item?.name.at(0)}</Avatar>\r\n                <Typography variant=\"body1\">{item?.name}</Typography>\r\n              </Box>\r\n              <Typography variant=\"subtitle2\">\r\n                {moment(item?.time).fromNow()}\r\n              </Typography>\r\n            </Box>\r\n            <Box width={\"100%\"}>\r\n              <Rating name=\"read-only\" value={item?.rating} readOnly />\r\n            </Box>\r\n            {/* <Typography variant=\"h6\">Heading</Typography> */}\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              {item?.review}\r\n            </Typography>{\" \"}\r\n            {index < review.length - 1 && <Divider />}\r\n          </Box>\r\n        ))\r\n      ) : (\r\n        <Typography textAlign={\"center\"}>No Review</Typography>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n"],"names":["Box","sx","display","width","justifyContent","alignItems","height","CircularProgress","setReviewModal","id","dispatch","useDispatch","useState","load","setLoad","useSelector","state","product","review","reviewLoading","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","getReview","observe","useEffect","clearReview","Paper","style","ref","borderBottom","Typography","variant","Button","onClick","length","map","item","index","gap","Avatar","name","at","moment","time","fromNow","Rating","value","rating","readOnly","gutterBottom","Divider","textAlign"],"sourceRoot":""}